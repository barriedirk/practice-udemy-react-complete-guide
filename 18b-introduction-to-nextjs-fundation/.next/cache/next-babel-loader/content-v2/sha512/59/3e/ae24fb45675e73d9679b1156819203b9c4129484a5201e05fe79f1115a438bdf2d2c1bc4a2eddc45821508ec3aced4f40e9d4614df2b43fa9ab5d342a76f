{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\practices\\\\react-complete-guide\\\\18b-introduction-to-nextjs\\\\pages\\\\index.js\";\n// our-domain.com/\nimport { useEffect, useState } from \"react\"; // we move Layout to router component _app.js to get every component will wrapper with Layout\n// import Layout from \"../components/layout/Layout\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// note\n//   with useEffect the rendering of this page will occur twice\n//   with data empty and second with the data\n//   for SEO is a bad idea and for that reason we could use\n//   the function getStaticProps()\n//\n// function HomePage() {\n//     const [loaded, setLoadedMeetups] = useState([]);\n//     useEffect(() => {\n//         // send a http request and fetch data\n//         //\n//\n//         setLoadedMeetups(DUMMY_MEETUPS);\n//     }, []);\n//\n//     // return (\n//     //     <Layout>\n//     //         <MeetupList meetups={DUMMY_MEETUPS} />\n//     //     </Layout>\n//     // );\n//\n//     // return <MeetupList meetups={DUMMY_MEETUPS} />;\n//\n//     console.log(\"[ loaded ] ::: \", loaded);\n//\n//     return <MeetupList meetups={loaded} />;\n// }\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n} // Data fetching for static pages (SSG)\n// -----------------------------------------\n//\n// Note: for static page generation\n//    nextjs will search for a function with this name during rendering process\n//    build on the server\n//\n// export async function getStaticProps() {\n//     // can use any instruction only run on the server\n//     // fetch data from an API\n//\n//     // need to return always a object\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n//\n// export async function getStaticProps() {\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//         // seconds that next will wait to regenerate the page\n//         // on the server\n//         revalidate: 10,\n//     };\n// }\n// Data fetching for server (SSR)\n// -----------------------------------------\n//\n// NOTE: not run during the build process\n// run on the server, never on the client\n// for any incoming request\n\n\n_c = HomePage;\nexport var __N_SSP = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/practices/react-complete-guide/18b-introduction-to-nextjs/pages/index.js"],"names":["useEffect","useState","MeetupList","HomePage","props","meetups"],"mappings":";;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;KAvCSF,Q;;AAsDT,eAAeA,QAAf","sourcesContent":["// our-domain.com/\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// we move Layout to router component _app.js to get every component will wrapper with Layout\r\n// import Layout from \"../components/layout/Layout\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: \"m1\",\r\n        title: \"A First Meeting\",\r\n        image: \"https://picsum.photos/seed/picsum/200/300?random=1\",\r\n        address: \"Some address 6, 1234 Some City\",\r\n        description: \"This is a first meetup!\",\r\n    },\r\n    {\r\n        id: \"m2\",\r\n        title: \"A Second Meeting\",\r\n        image: \"https://picsum.photos/seed/picsum/200/300?random=3\",\r\n        address: \"Some address 1, 1234 Some City\",\r\n        description: \"This is a second meetup!\",\r\n    },\r\n];\r\n\r\n// note\r\n//   with useEffect the rendering of this page will occur twice\r\n//   with data empty and second with the data\r\n//   for SEO is a bad idea and for that reason we could use\r\n//   the function getStaticProps()\r\n//\r\n// function HomePage() {\r\n//     const [loaded, setLoadedMeetups] = useState([]);\r\n//     useEffect(() => {\r\n//         // send a http request and fetch data\r\n//         //\r\n//\r\n//         setLoadedMeetups(DUMMY_MEETUPS);\r\n//     }, []);\r\n//\r\n//     // return (\r\n//     //     <Layout>\r\n//     //         <MeetupList meetups={DUMMY_MEETUPS} />\r\n//     //     </Layout>\r\n//     // );\r\n//\r\n//     // return <MeetupList meetups={DUMMY_MEETUPS} />;\r\n//\r\n//     console.log(\"[ loaded ] ::: \", loaded);\r\n//\r\n//     return <MeetupList meetups={loaded} />;\r\n// }\r\n\r\nfunction HomePage(props) {\r\n    return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// Data fetching for static pages (SSG)\r\n// -----------------------------------------\r\n//\r\n// Note: for static page generation\r\n//    nextjs will search for a function with this name during rendering process\r\n//    build on the server\r\n//\r\n// export async function getStaticProps() {\r\n//     // can use any instruction only run on the server\r\n//     // fetch data from an API\r\n//\r\n//     // need to return always a object\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS,\r\n//         },\r\n//     };\r\n// }\r\n//\r\n// export async function getStaticProps() {\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS,\r\n//         },\r\n//         // seconds that next will wait to regenerate the page\r\n//         // on the server\r\n//         revalidate: 10,\r\n//     };\r\n// }\r\n\r\n// Data fetching for server (SSR)\r\n// -----------------------------------------\r\n//\r\n// NOTE: not run during the build process\r\n// run on the server, never on the client\r\n// for any incoming request\r\nexport async function getServerSideProps(context) {\r\n    // to check cookie, etc\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    // fetch data from an API or filesystem\r\n\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS,\r\n        },\r\n    };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}