{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\practices\\\\react-complete-guide\\\\18b-introduction-to-nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  var meeetupData = props.meeetupData;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meeetupData.image,\n    title: meeetupData.title,\n    address: meeetupData.address,\n    description: meeetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n} // // in this example:\n// // http://localhost:3000/m3 return a 404 page\n// //\n// export async function getStaticPaths() {\n//     return {\n//         // indicate if support all support of params or not\n//         fallback: false,\n//         paths: [\n//             {\n//                 params: {\n//                     meetupId: \"m1\",\n//                 },\n//             },\n//             {\n//                 params: {\n//                     meetupId: \"m2\",\n//                 },\n//             },\n//         ],\n//     };\n// }\n//\n//\n// // this run in the build time\n// export async function getStaticProps(context) {\n//     // NOTE:\n//     // we can't use react routes like useRouter\n//     // we use the context\n//\n//     const meetupId = context.params.meetupId;\n//\n//     // Note:\n//     // doesn't show in the console browser\n//     // show up in the terminal\n//     console.log(\"[ context.params ] ::: \", context.params);\n//     console.log(\"[ meetupId ] ::: \", meetupId);\n//\n//     // Server Error\n//     // Error: getStaticPaths is required for dynamic SSG pages and is missing for '/[meetupId]'.\n//     // Read more: https://err.sh/next.js/invalid-getstaticpaths-value\n//     //\n//     // the above error is because this page is a dynamic page and need\n//     // getStaticPaths function\n//     // to generate for any kind of id ( meetupId )\n//\n//     return {\n//         props: {\n//             meeetupData: {\n//                 id: \"m1\",\n//                 image: \"https://picsum.photos/seed/picsum/200/300?random=1\",\n//                 title: \"title\",\n//                 address: \"address\",\n//                 description: \"description\",\n//             },\n//         },\n//     };\n// }\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/practices/react-complete-guide/18b-introduction-to-nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meeetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MAClBC,WADkB,GACFD,KADE,CAClBC,WADkB;AAG1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,WAAW,CAACC,KADvB;AAEI,IAAA,KAAK,EAAED,WAAW,CAACE,KAFvB;AAGI,IAAA,OAAO,EAAEF,WAAW,CAACG,OAHzB;AAII,IAAA,WAAW,EAAEH,WAAW,CAACI;AAJ7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArESN,a;;AA8GT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n    const { meeetupData } = props;\r\n\r\n    return (\r\n        <MeetupDetail\r\n            image={meeetupData.image}\r\n            title={meeetupData.title}\r\n            address={meeetupData.address}\r\n            description={meeetupData.description}\r\n        />\r\n    );\r\n}\r\n\r\n// // in this example:\r\n// // http://localhost:3000/m3 return a 404 page\r\n// //\r\n// export async function getStaticPaths() {\r\n//     return {\r\n//         // indicate if support all support of params or not\r\n//         fallback: false,\r\n//         paths: [\r\n//             {\r\n//                 params: {\r\n//                     meetupId: \"m1\",\r\n//                 },\r\n//             },\r\n//             {\r\n//                 params: {\r\n//                     meetupId: \"m2\",\r\n//                 },\r\n//             },\r\n//         ],\r\n//     };\r\n// }\r\n//\r\n//\r\n// // this run in the build time\r\n// export async function getStaticProps(context) {\r\n//     // NOTE:\r\n//     // we can't use react routes like useRouter\r\n//     // we use the context\r\n//\r\n//     const meetupId = context.params.meetupId;\r\n//\r\n//     // Note:\r\n//     // doesn't show in the console browser\r\n//     // show up in the terminal\r\n//     console.log(\"[ context.params ] ::: \", context.params);\r\n//     console.log(\"[ meetupId ] ::: \", meetupId);\r\n//\r\n//     // Server Error\r\n//     // Error: getStaticPaths is required for dynamic SSG pages and is missing for '/[meetupId]'.\r\n//     // Read more: https://err.sh/next.js/invalid-getstaticpaths-value\r\n//     //\r\n//     // the above error is because this page is a dynamic page and need\r\n//     // getStaticPaths function\r\n//     // to generate for any kind of id ( meetupId )\r\n//\r\n//     return {\r\n//         props: {\r\n//             meeetupData: {\r\n//                 id: \"m1\",\r\n//                 image: \"https://picsum.photos/seed/picsum/200/300?random=1\",\r\n//                 title: \"title\",\r\n//                 address: \"address\",\r\n//                 description: \"description\",\r\n//             },\r\n//         },\r\n//     };\r\n// }\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://practices:123ABCpractices@practices.socyj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() },\r\n        })),\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://practices:123ABCpractices@practices.socyj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meeetupData: selectedMeetup,\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}