{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\practices\\\\react-complete-guide\\\\18b-introduction-to-nextjs\\\\pages\\\\index.js\";\n// our-domain.com/\nimport { MongoClient } from \"mongodb\"; // note: nextjs will detect that MongoClient is only use insie of getStaticProps\n//       and will not include to the client bundle\n\nimport { useEffect, useState } from \"react\"; // we move Layout to router component _app.js to get every component will wrapper with Layout\n// import Layout from \"../components/layout/Layout\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meeting\",\n  image: \"https://picsum.photos/seed/picsum/200/300?random=1\",\n  address: \"Some address 6, 1234 Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meeting\",\n  image: \"https://picsum.photos/seed/picsum/200/300?random=3\",\n  address: \"Some address 1, 1234 Some City\",\n  description: \"This is a second meetup!\"\n}]; // note\n//   with useEffect the rendering of this page will occur twice\n//   with data empty and second with the data\n//   for SEO is a bad idea and for that reason we could use\n//   the function getStaticProps()\n//\n// function HomePage() {\n//     const [loaded, setLoadedMeetups] = useState([]);\n//     useEffect(() => {\n//         // send a http request and fetch data\n//         //\n//\n//         setLoadedMeetups(DUMMY_MEETUPS);\n//     }, []);\n//\n//     // return (\n//     //     <Layout>\n//     //         <MeetupList meetups={DUMMY_MEETUPS} />\n//     //     </Layout>\n//     // );\n//\n//     // return <MeetupList meetups={DUMMY_MEETUPS} />;\n//\n//     console.log(\"[ loaded ] ::: \", loaded);\n//\n//     return <MeetupList meetups={loaded} />;\n// }\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n} // Data fetching for static pages (SSG)\n// -----------------------------------------\n//  The code inside of getStaticProps is not expose to the client\n//\n// Note: for static page generation\n//    nextjs will search for a function with this name during rendering process\n//    build on the server\n//\n//\n// export async function getStaticProps() {\n//     // can use any instruction only run on the server\n//     // fetch data from an API\n//\n//     // need to return always a object\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n//\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://practices:123ABCpractices@practices.socyj.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); // return {\n  //     props: {\n  //         meetups: DUMMY_MEETUPS,\n  //     },\n  //     // seconds that next will wait to regenerate the page\n  //     // on the server\n  //     revalidate: 10,\n  // };\n\n  return {\n    props: {\n      // we need to use map because mongodb use _id as an object, and throw and erro\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n} // Data fetching for server (SSR)\n// -----------------------------------------\n//\n// NOTE: not run during the build process\n// run on the server, never on the client\n// for any incoming request\n//\n// export async function getServerSideProps(context) {\n//     // to check cookie, authentication, etc\n//     const req = context.req;\n//     const res = context.res;\n//     // fetch data from an API or filesystem\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["D:/practices/react-complete-guide/18b-introduction-to-nextjs/pages/index.js"],"names":["MongoClient","useEffect","useState","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B,C,CACA;AACA;;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EAAE,oDAHX;AAIIC,EAAAA,OAAO,EAAE,gCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,kBAFX;AAGIC,EAAAA,KAAK,EAAE,oDAHX;AAIIC,EAAAA,OAAO,EAAE,gCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACjB,yGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP,GAVmC,CAYnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACH;AACAC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAC9BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADgB;AAE9BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFc;AAG9BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHgB;AAI9BE,QAAAA,WAAW,EAAEc,MAAM,CAACd,WAJU;AAK9BJ,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAL0B,OAAb,CAAZ;AAFN,KADJ;AAWHC,IAAAA,UAAU,EAAE;AAXT,GAAP;AAaH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAehB,QAAf","sourcesContent":["// our-domain.com/\r\nimport { MongoClient } from \"mongodb\";\r\n// note: nextjs will detect that MongoClient is only use insie of getStaticProps\r\n//       and will not include to the client bundle\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// we move Layout to router component _app.js to get every component will wrapper with Layout\r\n// import Layout from \"../components/layout/Layout\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: \"m1\",\r\n        title: \"A First Meeting\",\r\n        image: \"https://picsum.photos/seed/picsum/200/300?random=1\",\r\n        address: \"Some address 6, 1234 Some City\",\r\n        description: \"This is a first meetup!\",\r\n    },\r\n    {\r\n        id: \"m2\",\r\n        title: \"A Second Meeting\",\r\n        image: \"https://picsum.photos/seed/picsum/200/300?random=3\",\r\n        address: \"Some address 1, 1234 Some City\",\r\n        description: \"This is a second meetup!\",\r\n    },\r\n];\r\n\r\n// note\r\n//   with useEffect the rendering of this page will occur twice\r\n//   with data empty and second with the data\r\n//   for SEO is a bad idea and for that reason we could use\r\n//   the function getStaticProps()\r\n//\r\n// function HomePage() {\r\n//     const [loaded, setLoadedMeetups] = useState([]);\r\n//     useEffect(() => {\r\n//         // send a http request and fetch data\r\n//         //\r\n//\r\n//         setLoadedMeetups(DUMMY_MEETUPS);\r\n//     }, []);\r\n//\r\n//     // return (\r\n//     //     <Layout>\r\n//     //         <MeetupList meetups={DUMMY_MEETUPS} />\r\n//     //     </Layout>\r\n//     // );\r\n//\r\n//     // return <MeetupList meetups={DUMMY_MEETUPS} />;\r\n//\r\n//     console.log(\"[ loaded ] ::: \", loaded);\r\n//\r\n//     return <MeetupList meetups={loaded} />;\r\n// }\r\n\r\nfunction HomePage(props) {\r\n    return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// Data fetching for static pages (SSG)\r\n// -----------------------------------------\r\n//  The code inside of getStaticProps is not expose to the client\r\n//\r\n// Note: for static page generation\r\n//    nextjs will search for a function with this name during rendering process\r\n//    build on the server\r\n//\r\n//\r\n// export async function getStaticProps() {\r\n//     // can use any instruction only run on the server\r\n//     // fetch data from an API\r\n//\r\n//     // need to return always a object\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS,\r\n//         },\r\n//     };\r\n// }\r\n//\r\n\r\nexport async function getStaticProps() {\r\n    // fetch data from API\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://practices:123ABCpractices@practices.socyj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n    // return {\r\n    //     props: {\r\n    //         meetups: DUMMY_MEETUPS,\r\n    //     },\r\n    //     // seconds that next will wait to regenerate the page\r\n    //     // on the server\r\n    //     revalidate: 10,\r\n    // };\r\n    return {\r\n        props: {\r\n            // we need to use map because mongodb use _id as an object, and throw and erro\r\n            meetups: meetups.map((meetup) => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                description: meetup.description,\r\n                id: meetup._id.toString(),\r\n            })),\r\n        },\r\n        revalidate: 1,\r\n    };\r\n}\r\n\r\n// Data fetching for server (SSR)\r\n// -----------------------------------------\r\n//\r\n// NOTE: not run during the build process\r\n// run on the server, never on the client\r\n// for any incoming request\r\n//\r\n// export async function getServerSideProps(context) {\r\n//     // to check cookie, authentication, etc\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     // fetch data from an API or filesystem\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS,\r\n//         },\r\n//     };\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}